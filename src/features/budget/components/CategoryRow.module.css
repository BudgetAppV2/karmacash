/* src/features/budget/components/CategoryRow.module.css */

/* 
   CategoryRow styles
   Following KarmaCash [B3.8 v2] UI/UX Style Guide 
*/

.rowContainer {
  display: grid;
  grid-template-columns: 2fr 1fr 1fr 1fr;
  align-items: center;
  padding: 12px 0;
  border-bottom: 1px solid var(--color-border-light);
}

.categoryName {
  font-weight: 500;
  padding-left: 8px;
}

.amountCell {
  text-align: right;
  padding: 0;
  font-variant-numeric: tabular-nums;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: flex-end;
  box-sizing: border-box;
}

.allocated {
  position: relative;
}

.allocated input.allocationInput {
  width: 100% !important;
  height: 28px !important;
  box-sizing: border-box !important;
  padding: 4px 8px !important;
  font-size: 1rem !important;
  background-color: rgba(255, 255, 255, 0.9) !important;
  border: 1px solid rgba(200, 200, 200, 0.5) !important;
  border-radius: 4px !important;
  text-align: right !important;
  font-variant-numeric: tabular-nums !important;
  margin: 0 !important;
  max-width: 100% !important;
  font-family: var(--font-body, inherit) !important;
  color: var(--text-primary, rgb(47, 47, 47)) !important;
  -moz-appearance: textfield !important;
  appearance: textfield !important;
  line-height: normal !important;
}

.allocated input.allocationInput:focus {
  outline: none !important;
  border-color: var(--primary-sage, rgb(145, 154, 127)) !important;
  background-color: rgba(245, 245, 245, 0.9) !important;
  box-shadow: 0 0 0 1px rgba(145, 154, 127, 0.3) !important;
}

.allocated input.allocationInput:hover:not(:focus) {
  background-color: rgba(245, 245, 245, 0.5) !important;
  border-color: rgba(145, 154, 127, 0.2) !important;
}

.allocated input.allocationInput::-webkit-outer-spin-button,
.allocated input.allocationInput::-webkit-inner-spin-button {
  -webkit-appearance: none !important;
  margin: 0 !important;
  display: none !important;
}

.allocated input.allocationInput[type=number] {
  -moz-appearance: textfield;
}

.activity {
  color: var(--text-primary);
}

.available {
  font-weight: 500;
}

/* Color styling for positive/negative values */
.positive {
  color: var(--positive, #568E8D) !important;
}

.negative {
  color: var(--negative, #C17C74) !important;
}

/* Make sure these more specific selectors override any other styles */
.amountCell.activity.positive,
.amountCell.available.positive {
  color: var(--positive, #568E8D) !important;
}

.amountCell.activity.negative,
.amountCell.available.negative {
  color: var(--negative, #C17C74) !important;
}

/* Responsive Adjustments (Example) */
@media (min-width: 640px) { /* sm breakpoint */
  .rowContainer {
    padding-left: var(--spacing-4, 1rem);
    padding-right: var(--spacing-4, 1rem);
  }
  .amountCell {
    min-width: 120px; /* Slightly wider columns on larger screens */
    padding-left: var(--spacing-3, 0.75rem);
    padding-right: var(--spacing-3, 0.75rem);
  }
}

/* Styling for formatted amount display when not editing */
.editableAmount {
  cursor: pointer;
  border: 1px solid transparent;
  border-radius: 4px;
  transition: background-color 0.2s ease;
  width: 100%;
  padding: 4px 8px;
  height: 28px;
  display: flex;
  align-items: center;
  justify-content: flex-end;
  box-sizing: border-box;
}

.editableAmount:hover {
  background-color: rgba(245, 245, 245, 0.5);
  border-color: rgba(145, 154, 127, 0.2);
}

/* Additional class for edit mode - helps with specificity */
.editModeInput {
  /* Ensure these will override any global styles */
  opacity: 1 !important;
  visibility: visible !important;
  display: block !important;
} 