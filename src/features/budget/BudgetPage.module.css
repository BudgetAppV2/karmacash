/* src/features/budget/BudgetPage.module.css */
.pageContainer {
    padding: var(--spacing-4); /* Add some basic padding */
  }
  
.categoryListContainer {
  margin-top: var(--spacing-6);
}

.categoryHeaderRow {
  display: grid;
  grid-template-columns: 2fr 1fr 1fr 1fr; /* Match CategoryRow's grid exactly */
  align-items: center;
  padding: var(--spacing-2) 0;
  margin-bottom: var(--spacing-2);
  font-weight: var(--font-weight-medium);
  border-bottom: 1px solid var(--color-highlight);
  color: var(--color-text-secondary);
}

/* Match column styles with CategoryRow for alignment */
.categoryHeaderRow .categoryName {
  padding-left: var(--spacing-2); /* Match CategoryRow padding exactly */
}

.categoryHeaderRow .amountCell {
  text-align: right;
  padding: 0 var(--spacing-3);
}

@media (min-width: 640px) {
  .pageContainer {
    padding-left: var(--spacing-6);
    padding-right: var(--spacing-6);
  }
  
  .categoryHeaderRow .amountCell {
    min-width: 120px;
  }
}

.error {
  color: var(--color-negative);
  padding: var(--spacing-4);
  margin: var(--spacing-4) 0;
  border-radius: var(--border-radius-sm);
  background-color: color-mix(in srgb, var(--color-negative) 10%, var(--color-background));
}
  
.budgetPage {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg);
  padding: var(--spacing-md);
  background-color: var(--color-background-alt); /* Subtle background for depth */
  height: auto; /* Change from min-height: 100vh to allow scrolling */
  overflow-y: visible; /* Ensure content can overflow and scroll */
  position: relative; /* Ensure proper stacking context */
}

/* Header Styles */
.header {
  background-color: var(--color-surface);
  padding: var(--spacing-md);
  border-radius: var(--border-radius-md);
  box-shadow: var(--shadow-level-1);
  text-align: center;
}

.budgetName {
  font-size: var(--font-size-xl);
  color: var(--color-primary);
  margin: 0 0 var(--spacing-sm) 0;
  font-weight: var(--font-weight-semibold);
}

.monthNavigation {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--spacing-sm);
}

.navButton {
  background-color: transparent;
  border: 1px solid var(--color-border);
  color: var(--color-primary);
  padding: var(--spacing-xs); /* Increased padding for touch */
  border-radius: var(--border-radius-round); /* Circle buttons */
  cursor: pointer;
  display: flex; /* For icon centering */
  align-items: center;
  justify-content: center;
  width: 40px; /* Ensure touch target */
  height: 40px; /* Ensure touch target */
  transition: background-color var(--transition-fast), box-shadow var(--transition-fast);
}

.navButton:hover, .navButton:focus-visible {
  background-color: var(--color-primary-x-light);
  box-shadow: var(--shadow-level-1);
  outline: 2px solid var(--color-focus);
  outline-offset: 2px;
}

.navButton svg {
  width: 20px; /* Icon size */
  height: 20px;
}

.currentMonthDisplay {
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-medium);
  color: var(--color-text-primary);
  min-width: 150px; /* Prevent layout shifts */
  text-align: center;
}

/* Summary Metrics Section */
.summaryMetrics {
  display: grid;
  grid-template-columns: 1fr 1fr; /* Two columns on mobile */
  gap: var(--spacing-md);
}

.statCard {
  background-color: var(--color-surface);
  padding: var(--spacing-md);
  border-radius: var(--border-radius-md);
  box-shadow: var(--shadow-level-1);
  display: flex;
  flex-direction: column;
  align-items: center; /* Center content */
  text-align: center;
}

.statLabel {
  font-size: var(--font-size-sm);
  color: var(--color-text-secondary);
  margin-bottom: var(--spacing-xs);
}

.statValue {
  font-size: var(--font-size-lg); /* Make numbers prominent */
  font-weight: var(--font-weight-bold);
  color: var(--color-text-primary);
  line-height: 1.2;
}

.statSubValue {
  font-size: var(--font-size-xs);
  color: var(--color-text-tertiary);
  margin-top: var(--spacing-xxs);
}

.remainingPositive { color: var(--color-success); }
.remainingNegative { color: var(--color-error); }
.remainingZero { color: var(--color-text-primary); }

/* Ensure these styles are defined or updated for RAA specifically if needed */
/* These might already exist or be covered by .remainingPositive etc. */
.raaPositive {
  color: var(--color-positive-text, var(--color-positive, #568E8D)); /* Default to base positive color */
}

.raaNegative {
  color: var(--color-negative-text, var(--color-negative, #C17C74)); /* Default to base negative color */
}

.raaNeutral {
  color: var(--color-text-primary, #2F2F2F);
}

.raaApproachingZero {
  color: var(--color-warning-text, var(--color-warning, #E0B470)); /* Using a color from B3.8 categorical like Ochre/Gold for subtle warning */
  /* font-weight: var(--font-weight-semibold); */ /* Optionally make it a bit bolder */
}

/* Indicators & Error Messages */
.recalculatingIndicator,
.recalculatingIndicatorComplete {
  text-align: center;
  padding: var(--spacing-sm);
  margin: var(--spacing-xs) 0;
  border-radius: var(--border-radius-sm);
  font-size: var(--font-size-sm);
}
.recalculatingIndicator {
  background-color: var(--color-info-x-light);
  color: var(--color-info);
}
.recalculatingIndicatorComplete {
  background-color: var(--color-success-x-light);
  color: var(--color-success);
}

.errorDisplay {
  background-color: var(--color-error-x-light);
  color: var(--color-error);
  padding: var(--spacing-md);
  border-radius: var(--border-radius-md);
  margin: var(--spacing-sm) 0;
  text-align: center;
}
.errorDisplay h3 {
  margin-top: 0;
  color: var(--color-error-dark); /* Darker for title within light error box */
}

.dataSourceIndicator {
  font-size: var(--font-size-xs);
  color: var(--color-text-tertiary);
  text-align: center;
  margin-top: calc(-1 * var(--spacing-sm)); /* Pull up slightly */
  margin-bottom: var(--spacing-sm);
}

.infoDisplay {
  margin-bottom: var(--spacing-3);
  padding: var(--spacing-3);
  border-radius: var(--border-radius-md);
  background-color: var(--color-information-light, #e0f2fe); /* Assuming a light version of info color */
  color: var(--color-information-dark, #075985); /* Assuming a dark version of info color for text */
  border: 1px solid var(--color-information, #7dd3fc);
  animation: fadeInOut 3s ease-in-out forwards; /* Added animation */
}

@keyframes fadeInOut {
  0% { opacity: 0; transform: translateY(-10px); }
  15% { opacity: 1; transform: translateY(0); }
  85% { opacity: 1; transform: translateY(0); }
  100% { opacity: 0; transform: translateY(-10px); }
}

/* Styles for the feedback message system */
.feedbackContainer {
  padding: var(--spacing-sm, 0.5rem) var(--spacing-md, 1rem);
  margin: var(--spacing-md, 1rem) auto; /* Centered with margin */
  border-radius: var(--border-radius-md, 0.5rem);
  box-shadow: var(--shadow-level-1, 0 1px 3px rgba(0,0,0,0.1), 0 1px 2px rgba(0,0,0,0.06));
  display: flex;
  align-items: center;
  gap: var(--spacing-sm, 0.5rem);
  max-width: 600px; /* Max width for readability */
  text-align: left; /* Align text to the left within the container */
  /* Removed fixed positioning to allow it to flow with content, e.g., above categories */
}

.feedbackContainer svg {
  flex-shrink: 0; /* Prevent icon from shrinking */
  width: 20px;
  height: 20px;
}

.feedbackInfo {
  background-color: var(--color-information-x-light, #e0f2fe);
  color: var(--color-information-dark, #0c5460);
  border: 1px solid var(--color-information-light, #bee5eb);
}

.feedbackInfo svg {
  color: var(--color-information, #31708f);
}

.feedbackError {
  background-color: var(--color-negative-x-light, #f8d7da);
  color: var(--color-negative-dark, #721c24);
  border: 1px solid var(--color-negative-light, #f5c6cb);
}

.feedbackError svg {
  color: var(--color-negative, #C17C74);
}

/* Category Section */
.categorySection {
  margin-top: var(--spacing-md);
}

.sectionTitle {
  font-size: var(--font-size-lg);
  color: var(--color-text-primary);
  margin-bottom: var(--spacing-md);
  font-weight: var(--font-weight-medium);
}

.categoryCardList {
  display: grid;
  grid-template-columns: 1fr;
  gap: var(--spacing-md);
}

.categoryCard {
  /* Individual card styling will largely come from CategoryProgressDisplay.module.css */
  /* This just handles the grid placement and any animations/interactions */
  transition: transform var(--transition-fast), box-shadow var(--transition-fast);
  overflow: hidden; /* Ensure content doesn't overflow rounded corners */
}

.categoryCard:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-level-2);
}

.categoryCardHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--spacing-sm);
  gap: var(--spacing-sm);
}

.categoryName {
  font-size: var(--font-size-md);
  font-weight: var(--font-weight-semibold); /* Make category name stand out */
  color: var(--color-primary-dark);
  flex-grow: 1;
}

.categoryAllocationInput {
  font-size: var(--font-size-md);
  padding: var(--spacing-xs) var(--spacing-sm);
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius-sm);
  width: 100px; /* Fixed width for consistency */
  text-align: right;
  background-color: var(--color-surface-raised);
  color: var(--color-text-primary);
}
.categoryAllocationInput:focus {
  outline: 2px solid var(--color-focus);
  border-color: var(--color-primary);
  background-color: var(--color-surface);
}

.categoryCardBody {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
}

.categoryProgressBarContainer {
  width: 100%;
  height: 12px; /* Thicker progress bar */
  background-color: var(--color-border-x-light);
  border-radius: var(--border-radius-pill); /* Pill shape */
  overflow: hidden;
}

.categoryProgressBarFilled {
  height: 100%;
  background-color: var(--color-secondary); /* Use secondary for progress */
  border-radius: var(--border-radius-pill);
  transition: width var(--transition-medium) var(--ease-standard);
}
.categoryCard:has(.figureValueNegative) .categoryProgressBarFilled { /* If available is negative, bar could be red */
  background-color: var(--color-warning); /* Or error, if it means overspent */
}


.categoryFigures {
  display: flex;
  justify-content: space-between;
  gap: var(--spacing-sm); /* Add gap for spacing */
  flex-wrap: wrap; /* Allow wrapping on very small screens if needed */
}

.figure {
  display: flex;
  flex-direction: column;
  align-items: flex-start; /* Align text to start for each figure */
  min-width: 80px; /* Ensure some minimum width */
  text-align: left;
}
.figure:last-child { /* Make last item (Available) more prominent or align right */
  align-items: flex-end;
  text-align: right;
}


.figureLabel {
  font-size: var(--font-size-xs);
  color: var(--color-text-secondary);
  margin-bottom: 2px;
}

.figureValue {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  color: var(--color-text-primary);
}
.figureValueNegative {
  color: var(--color-error) !important; /* Ensure it's visible */
}


/* Empty States & Loading */
.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-xl);
  text-align: center;
  color: var(--color-text-secondary);
  background-color: var(--color-surface);
  border-radius: var(--border-radius-md);
}
.emptyState svg {
  width: 48px;
  height: 48px;
  margin-bottom: var(--spacing-md);
  color: var(--color-primary-light);
}
.emptyStateTitle {
  font-size: var(--font-size-lg);
  color: var(--color-text-primary);
  margin: 0 0 var(--spacing-xs) 0;
}
.emptyStateText {
  font-size: var(--font-size-md);
  margin-bottom: var(--spacing-md);
}
.emptyStateButton { /* Basic styling if you add a button */
  background-color: var(--color-primary);
  color: var(--color-text-on-primary);
  padding: var(--spacing-sm) var(--spacing-lg);
  border: none;
  border-radius: var(--border-radius-sm);
  font-size: var(--font-size-md);
  cursor: pointer;
}
.emptyStateButton:hover {
  background-color: var(--color-primary-dark);
}

.loadingContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 300px; /* Ensure it takes some space */
  font-size: var(--font-size-lg);
  color: var(--color-text-secondary);
  background-color: var(--color-surface);
  border-radius: var(--border-radius-md);
  padding: var(--spacing-xl);
}


/* Tablet and Up */
@media (min-width: 768px) {
  .budgetPage {
    padding: var(--spacing-md, 1rem);
  }

  .header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    text-align: left;
  }
  .budgetName {
    margin-bottom: 0;
  }

  .summaryMetrics {
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); /* Responsive grid */
    gap: var(--spacing-lg);
  }
  .statCard {
     align-items: flex-start; /* Align left on larger screens */
     text-align: left;
  }
  .statValue {
    font-size: var(--font-size-xl); /* Even more prominent */
  }

  .categorySection {
    /* Add any tablet-specific adjustments */
  }

  .sectionTitle {
    /* Add any tablet-specific adjustments */
  }

  .categoryCardList {
    grid-template-columns: repeat(2, 1fr); /* Two cards per row on tablets */
    gap: var(--spacing-md);
  }
   .categoryCardHeader {
    margin-bottom: var(--spacing-md);
  }
  .categoryAllocationInput {
    width: 120px; /* A bit wider on larger screens */
  }
  .categoryCardBody {
    gap: var(--spacing-md);
  }
   .categoryFigures {
    gap: var(--spacing-md); /* More gap for figures */
  }
  .figure {
    min-width: 90px;
  }
}

/* Desktop specific refinements (optional) */
@media (min-width: 1024px) {
  .summaryMetrics {
    /* Could have 3 or more columns if many stats */
    /* grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));  */
  }
   .categoryCardList {
    grid-template-columns: repeat(3, 1fr); /* Three cards per row on desktop */
    gap: var(--spacing-lg);
  }
}

@media (max-width: 600px) {
  .budgetPage {
    padding: var(--spacing-sm);
  }
  
  .categoryCardList {
    gap: var(--spacing-sm); /* Reduce gap between cards */
  }
  
  .sectionTitle {
    font-size: var(--font-size-md);
    margin-bottom: var(--spacing-sm);
  }
}
  